import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;


public class FileAndDirTask1 {
    public static void main(String[] args) {
        File root = new File("."); // связываем переменную root с текущей директорией

        ArrayList<File> expand = new ArrayList<File>(); // массив путей файлов и каталогов в текущей директории.
                                                        // Т.к. нельзя заранее знать количество содержимого в директории,
                                                        // то обычный массив использовать не можем

        expand.add(root); // добавляем текущую директорию, в которой будем анализировать содержимое

        // По условию задачи необходимо рассмотреть содержиме директории до 10-го уровня вложенности:
        for(int depth = 0; depth < 10; depth++) {
            // создаем стандартный массив с известным количеством элементов,
            // добавляя в него элементы ранее созданного массива expand
            // с помощью метода .toArray(), позволяющего преобразовать элементы ArrayList<>
            File[] expandCopy = expand.toArray(new File[expand.size()]);
            expand.clear(); // очищаем массив, чтобы в дальнейшем записать в него пути файлов обнаруженных поддиректорий

            // Теперь пройдемся по каждому элементу массива, который представляет собой пути к содержимому текущей директории
            for (File file : expandCopy) {
                // Выведем текущий уровень вложенности и путь обнаруженного файла/поддиректории
                System.out.println(depth + " " + file);

                // Проверим, является ли текущий элемент массива каталогом
                if (file.isDirectory()) {

                    // Если нашли каталог, то далее необходимо аналогично проанализировать его содержимое:
                    // вывести на экран и проверить на наличие вложенных каталогов
                    // и так до тех пор, пока уровень вложенности не превосходит 10

                    // В данной команде можно выделить 3 действия:
                    // 1 - метод .listFiles() класса File, который возвращает пути ко всему содержимому директории file
                    // в виде обычного массива файлов (File[])
                    // 2 - метод .asList() класса Arrays, который преобразует содержимое обычного массива в ArrayList<File>
                    // 3 - метод .addAll() класса ArrayList, который добавляет все элементы другого массива в указанный expand
                    expand.addAll(Arrays.asList(file.listFiles()));

                    // После выхода из условного оператора имеем обновленный массив expand с файлами следующего уровня вложенности
                }
            }
        }
    }
}